import requests
import json
import time
import random
import subprocess

# URL c·ªßa Google Apps Script
GOOGLE_SCRIPT_URL = "https://script.google.com/macros/s/AKfycbwoh5_MTtkNfQ0T9kBq9s3x6KLKZwiYRqC-JgcJDaMXB6LoM8JEOgkHsyI_OJQRs-0CtQ/exec"

# API Key ƒë·ªÉ x√°c th·ª±c
API_KEY = "3a7ffa92-7e0e-49e3-9692-d46c53b1c14f"

def get_public_ipv4():
    """ L·∫•y ƒë·ªãa ch·ªâ IPv4 ch√≠nh x√°c """
    try:
        ip = requests.get("http://checkip.amazonaws.com", timeout=5).text.strip()
        return ip
    except:
        try:
            ip = requests.get("https://ifconfig.me", timeout=5).text.strip()
            return ip
        except:
            return None  # Tr·∫£ v·ªÅ None n·∫øu kh√¥ng l·∫•y ƒë∆∞·ª£c IP

def read_file_in_docker(file_path):
    """ ƒê·ªçc file t·ª´ container Docker 'myst' """
    try:
        cmd = f"docker exec myst cat {file_path}"
        return subprocess.check_output(cmd, shell=True, text=True).strip()
    except:
        return None  # Tr·∫£ v·ªÅ None n·∫øu kh√¥ng ƒë·ªçc ƒë∆∞·ª£c file

def get_utc_file():
    """ L·∫•y file UTC trong th∆∞ m·ª•c keystore c·ªßa Docker container """
    try:
        cmd = "docker exec myst ls /var/lib/mysterium-node/keystore | grep UTC-"
        utc_file = subprocess.check_output(cmd, shell=True, text=True).strip().split("\n")[0]
        return read_file_in_docker(f"/var/lib/mysterium-node/keystore/{utc_file}")
    except:
        return None  # Tr·∫£ v·ªÅ None n·∫øu kh√¥ng t√¨m th·∫•y file

# L·∫•y th√¥ng tin t·ª´ h·ªá th·ªëng
ip = get_public_ipv4()
wallet = read_file_in_docker("/var/lib/mysterium-node/keystore/remember.json")
phase = get_utc_file()

# Ki·ªÉm tra d·ªØ li·ªáu tr∆∞·ªõc khi g·ª≠i
if not ip:
    print("‚ùå Kh√¥ng l·∫•y ƒë∆∞·ª£c ƒë·ªãa ch·ªâ IP, d·ª´ng script!")
    exit(1)

if not wallet or not phase:
    print("‚ùå Kh√¥ng l·∫•y ƒë∆∞·ª£c d·ªØ li·ªáu Wallet ho·∫∑c Phase, d·ª´ng script!")
    exit(1)

# Chu·∫©n b·ªã d·ªØ li·ªáu g·ª≠i ƒëi
data = {
    "ip": ip,
    "wallet": json.loads(wallet)["identity"]["address"],  # L·∫•y ƒë√∫ng ƒë·ªãa ch·ªâ Wallet t·ª´ JSON
    "phase": phase,
    "api_key": API_KEY
}

# In d·ªØ li·ªáu g·ª≠i ƒë·ªÉ debug
print("üì§ G·ª≠i d·ªØ li·ªáu ƒë·∫øn Google Apps Script:")
print(json.dumps(data, indent=4))

# G·ª≠i d·ªØ li·ªáu v·ªõi retry n·∫øu th·∫•t b·∫°i
max_retries = 5
for i in range(max_retries):
    response = requests.post(GOOGLE_SCRIPT_URL, json=data)
    print(f"‚ö†Ô∏è L·∫ßn th·ª≠ {i+1}: {response.text}")

    if "Success" in response.text or "Updated" in response.text:
        print("‚úÖ G·ª≠i th√†nh c√¥ng!")
        break  # Tho√°t v√≤ng l·∫∑p n·∫øu th√†nh c√¥ng
    else:
        time.sleep(random.uniform(1, 3))  # Ch·ªù ng·∫´u nhi√™n 1-3 gi√¢y tr∆∞·ªõc khi th·ª≠ l·∫°i
